name: Deploy updated app to GKE

on:
  workflow_dispatch

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER1: dev-gke
  GKE_CLUSTER2: qa-gke
  GKE_CLUSTER3: prod-gke
  GKE_ZONE: us-central1-a

jobs:
  Job1:
    name: Setup and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    ## Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER1" --zone "$GKE_ZONE"
        
              
    # Login to Jfrog
    - name: Jfrog login
      env:
        JFROG_USER: ${{ secrets.JFROG_USER }}
        JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
      run: |
        docker login sreyo.jfrog.io -u $JFROG_USER -p $JFROG_PASSWORD
        kubectl delete secret jfrog-secret --ignore-not-found 
        kubectl create secret generic jfrog-secret --from-file=.dockerconfigjson=/home/runner/.docker/config.json  --type=kubernetes.io/dockerconfigjson
    
        
    # Deploy docorized app image to the GKE cluster
    - name: Deploy Application
      run: |- 
        kubectl apply -f jppublic.yaml
        kubectl wait --timeout=90s --for=condition=ready pod -l app=jppublic
        kubectl rollout restart deploy jppublic-deployment
        kubectl rollout status deployment jppublic-deployment
   
#  Job2:
#    needs: Job1
#    name: Newman Testing
#    runs-on: ubuntu-latest 

#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2

#    - name: Install node
#      uses: actions/setup-node@v1
        
#    # Runs a set of commands using the runners shell      
#    - name: Install Newman
#      run: |
#        npm install -g newman
#        npm install -g newman-reporter-htmlextra
     
#    - name: Make dir for test result
#      run: mkdir Results
        
#    - name: Run Collection  
#      run: newman run ./Postman_Collections/DEV_Collections.json

#    - name: Output Run Details
#      uses: actions/upload-artifact@v2
#      with:
#        name: RunReports
#        path: Results  
        
  Job2:
    needs: Job1
    name: Deploy to QA
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER2" --zone "$GKE_ZONE"
        
              
    # Login to Jfrog
    - name: Jfrog login
      env:
        JFROG_USER: ${{ secrets.JFROG_USER }}
        JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
      run: |
          docker login sreyo.jfrog.io -u $JFROG_USER -p $JFROG_PASSWORD
          kubectl delete secret jfrog-secret --ignore-not-found 
          kubectl create secret generic jfrog-secret --from-file=.dockerconfigjson=/home/runner/.docker/config.json  --type=kubernetes.io/dockerconfigjson
    

    # Deploy docorized app image to the GKE cluster
    - name: Deploy Application
      run: |-
        kubectl apply -f jppublic.yaml
        kubectl wait --timeout=90s --for=condition=ready pod -l app=jppublic
        kubectl rollout restart deploy jppublic-deployment
        kubectl rollout status deployment jppublic-deployment    
 
#  Job4:
#    needs: Job3
#    name: Newman Testing for QA
#    runs-on: ubuntu-latest    
    
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
      
#    - name: Install node
#      uses: actions/setup-node@v1
        
#    # Runs a set of commands using the runners shell      
#    - name: Install Newman
#      run: |
#        npm install -g newman
#        npm install -g newman-reporter-htmlextra
     
#    - name: Make dir for test result
#      run: mkdir Results
        
#    - name: Run Collection  
#      run: newman run ./Postman_Collections/QA_Collections.json

#    - name: Output Run Details
#      uses: actions/upload-artifact@v2
#      with:
#        name: RunReports
#        path: Results  
 
  Job3:
    needs: Job2
    name: Deploy to PROD-Canary
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER3" --zone "$GKE_ZONE"
        
              
    # Login to Jfrog
    - name: Jfrog login
      env:
        JFROG_USER: ${{ secrets.JFROG_USER }}
        JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
      run: |
          docker login sreyo.jfrog.io -u $JFROG_USER -p $JFROG_PASSWORD
          kubectl delete secret jfrog-secret --ignore-not-found 
          kubectl create secret generic jfrog-secret --from-file=.dockerconfigjson=/home/runner/.docker/config.json  --type=kubernetes.io/dockerconfigjson
        
    # Deploy docorized app image to the GKE cluster
    - name: Deploy Application
      run: |-
        kubectl apply -f jppublic.yaml
        kubectl wait --timeout=90s --for=condition=ready pod -l app=jppublic
        kubectl rollout restart deploy jppublic-deployment
        kubectl rollout status deployment jppublic-deployment
 
 
#   Job9:
#     needs: Job8
#     name: Newman Testing for PROD
#     runs-on: ubuntu-latest    
    
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
      
#     - name: Install node
#       uses: actions/setup-node@v1
        
#     # Runs a set of commands using the runners shell      
#     - name: Install Newman
#       run: |
#         npm install -g newman
#         npm install -g newman-reporter-htmlextra
     
#     - name: Make dir for test result
#       run: mkdir Results
        
#     - name: Run Collection  
#       run: newman run ./Postman_Collections/PROD_Collections.json

#     - name: Output Run Details
#       uses: actions/upload-artifact@v2
#       with:
#         name: RunReports
#         path: Results 
